import itertools

def bicycle(iterable, repeat=1):
    for item in itertools.cycle(iterable):
        for _ in range(repeat):
            yield item

def part1(input, rounds):
    pattern = [0,1,0,-1]
    for _ in range(rounds):
        output = ['0' for _ in range(len(input))]
        for j in range(len(input)):
            cycle = bicycle(pattern,j + 1)
            next(cycle)
            out = 0
            for i in range(len(input)):
                out += next(cycle) * int(input[i])
            output[j] = str(out)[-1]
        input = ''.join(output)
    return input

if __name__ == "__main__":
    assert part1('12345678',1) == '48226158'
    assert part1('12345678',2) == '34040438'
    assert part1('80871224585914546619083218645595',100)[:8] == '24176176'

    input = '59773590431003134109950482159532121838468306525505797662142691007448458436452137403459145576019785048254045936039878799638020917071079423147956648674703093863380284510436919245876322537671069460175238260758289779677758607156502756182541996384745654215348868695112673842866530637231316836104267038919188053623233285108493296024499405360652846822183647135517387211423427763892624558122564570237850906637522848547869679849388371816829143878671984148501319022974535527907573180852415741458991594556636064737179148159474282696777168978591036582175134257547127308402793359981996717609700381320355038224906967574434985293948149977643171410237960413164669930'
    print('Day 16, Part 1: {}'.format(part1(input,100)[:8]))